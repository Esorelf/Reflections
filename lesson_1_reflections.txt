How did viewing a diff between two versions of a file help you see the bug that was introduced?

The diff allowed me to compare the old version of the file to the
new version, therefore enabling me to much more easily find a 
difference between the two. The command used found the differences
between the two files chosen to be compared, and displayed them
for me, so as to find the bug.


How could having easy access to the entire history of a file make you a more efficient progammer in the long term?

With access to every version of a file, if anything is amiss with the file, I would easily be able to correct it, whether by comparing two files to each other with Git Bash, or via reverting to an older version. This would allow for easier problem-solving, and therefore, faster work-speed and efficiency.


What do you think the pros and cons of manually choosing when to create a commit are, like you do in Git, vs having versions automatically saved, like Google Docs.

With manually choosing when to commit/manually save, it is often dependent of the person, as some may love the flexibility offered by
being able to personally choose when to save, while others might be a tad more forgetful, and would prefer the ability to have their versions 
saved automatically, in intervals. The down-side to this, however, is that with automatic saves, depending on the interval in which saves are made, there might soon be a large amount of saves, each save possibly possessing only the most negligible of changes, causing great difficulty to a person trying to find an error in a version of their code. 


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

When coding, a person might need to change something in one file that relates to multiple files, such as a specific button input that controls the direction in which a character might move. You may have a file that determines controls for a computer version of a game, while another file determines controls for the mobile version, yet in both files, the basic input of buttons might remain the same, which is why it would be useful to be able to save multiple files in one commit, as one could change the input in each file, and since they all relate to the same game, would be saved under one commit. In a system like that of Google Docs, however, more often than not you will likely be saving a work such as an essay, or a presentation, into one document, with the single document consisting of multiple pages/slides. It would be usually considered as impractical to save say, a short story, as an unoffical collection of multiple documents that would each be a page of the story. Therefore each file would only be affected separately. 


How can you use the commands git log and git diff to view the history of files?

The command 'git log' allows the user to view the history of commits of a file. Each commit shown has an id and the commit comment. The command 'git diff' can be used to compare two commits of a file, by using the id's of the commits. It will compare the two commits by showing the changes made, with green text representing the lines added in the newer commit, and the red text representing the lines deleted in the newer commit. 


How might version control make you more confident to make changes that could break something?

Version control would help in that it allows me to save multiple versions of files, so that I am able to go back and review any saved version I choose. If I were to make a significant change in the code that may possibly cause an error in the code, I likely would not need to worry so much, because I would be able to look at each version, identify the mistake, and correct it.


Now that you have your workspace set up, what do you want to try using Git for? 

I plan to enroll in two other courses on Udacity that have to do with Virtual Reality Development. Using a combination of Unity and the Version Control provided by Git, I plan to become proficient at creating various VR sims.